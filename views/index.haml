!!!
%html
  %head
    %link{ :href => "/styles/fonts.css", :rel => "stylesheet", :type => "text/css" }
    %link{ :href => "/styles/chart.css", :rel => "stylesheet", :type => "text/css" }
    %link{ :rel => "shortcut icon", :href => "http://24.media.tumblr.com/avatar_b25e54a5feb5_16.png" }
    %meta{ :content => "Sam MacCutchan", :name => "author" }
    %title Sam Edward Wilson MacCutchan - sewm.org

  %body
    %h1 Sam Edward Wilson MacCutchan
    
    %form{ :action => "daily_update", :method => "post"}
      %table
        %tr
          %th
            %label{ :for => "date" } Date:
          %th
            %label{ :for => "units" } Units:
          %th
            %label{ :for => "price" } Price: 
        %tr
          %td
            %input{ :id => "date", :name => "date", :type =>"date", :value => @current_time.strftime("%F") }
          %td
            %input{ :type => "number", :name => "units", :min => "0", :step => "0.001", :id =>  "units", :value => @current_units }
          %td
            %input{ :type => "number", :name => "price", :min => "0", :step => "0.0001", :id => "price" }         
        %tr
          %td
            %input{ :type => "submit" }

    %canvas{ :id => "chart", :width => "#{ @prices.length }", :height => "1000" }
    
    %p
        
    %p= @first_date.strftime("%F")
    %p= @last_date.strftime("%F")
    %p Max price is #{ @max_price }
    %p Min price is #{ @min_price }
    %p Max units are #{ @max_units }
    %p Min units are #{ @min_units }
    %p Max value is #{ @max_value }
    %p Min value is #{ @min_value }
    
    %script
      var c=document.getElementById("chart");
      var ctx=c.getContext("2d");
      ctx.beginPath();
      ctx.fillStyle="#FF0000";
      ctx.strokeStyle="#FF0000";
      // The lines on the chart are drawn from the current data point to the previous one
      // To scale the price data to the chart we subtract the data point from 500
      // then multiply by two
      - (1...@prices.length).each do |i|        
        ctx.moveTo(#{ i },#{ (500 - (@prices[i] * 10)) * 2 });           // Go to the current data point
        ctx.lineTo(#{ i - 1 }, #{ (500 - (@prices[i - 1] * 10)) * 2 });  // Draw a line to the previous data point
        ctx.stroke();                                                         // Put the line on screen
      ctx.closePath();
      ctx.beginPath();
      ctx.fillStyle="#00FF00";
      ctx.strokeStyle="#00FF00";
      - (1...@units.length).each do |i|
        ctx.moveTo(#{ i },#{ 1000 - @units[i].to_i });            // Go to the current data point
        ctx.lineTo(#{ i - 1 }, #{ 1000 - (@units[i - 1].to_i) }); // Draw a line to the previous data point
        ctx.stroke();                                             // Put the line on screen
      ctx.closePath();
      ctx.beginPath();
      ctx.fillStyle="#0000FF";
      ctx.strokeStyle="#0000FF";
      - (1...@values.length).each do |i|
        ctx.moveTo(#{ i }, #{ 1000 - (@values[i] / 10 - 200) });         // Go to the current data point
        ctx.lineTo(#{ i - 1 }, #{ 1000 - (@values[i - 1] / 10 - 200) }); // Draw a line to the previous data point
        ctx.stroke();                                                         // Put the line on screen
      ctx.closePath();